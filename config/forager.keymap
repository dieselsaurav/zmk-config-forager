#define ZMK_POINTING_DEFAULT_MOVE_VAL 1000  // default: 600
#define ZMK_POINTING_DEFAULT_SCRL_VAL 15    // default: 10

#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>

#define BASE 0
#define NAV  1
#define SYM  2
#define ADJ  3

/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

/ {
    behaviors {
        thumb_ht: thumb_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <150>;
            flavor = "balanced";
            bindings = <&kp>, <&kp>;

            quick-tap-ms = <180>;
            hold-trigger-key-positions = <0 1 2 3 4 14 10 11 12 13 14 20 21 22 23 24 5 6 7 8 9 15 16 17 18 19 25 26 27 28 29>;
        };

        hml: left_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <220>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 30 31 32 33>;
            hold-trigger-on-release;
        };

        hmr: right_homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <220>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <100>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33>;
            hold-trigger-on-release;
        };

        as: auto_shift {
            compatible = "zmk,behavior-hold-tap";
            label = "AUTO_SHIFT";
            bindings = <&kp>, <&kp>;

            #binding-cells = <2>;
            flavor = "tap-preferred";
            tapping-term-ms = <250>;
            require-prior-idle-ms = <100>;
        };

        hml_fast: left_homerow_mods_fast {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <80>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <5 6 7 8 9 15 16 17 18 19 25 26 27 28 29 30 31 32 33>;
            hold-trigger-on-release;
            label = "HML_FAST";
        };

        hmr_fast: right_homerow_mods_fast {
            compatible = "zmk,behavior-hold-tap";
            #binding-cells = <2>;
            flavor = "balanced";
            tapping-term-ms = <200>;
            quick-tap-ms = <200>;
            require-prior-idle-ms = <80>;
            bindings = <&kp>, <&kp>;

            hold-trigger-key-positions = <0 1 2 3 4 10 11 12 13 14 20 21 22 23 24 30 31 32 33>;
            hold-trigger-on-release;
            label = "HMR_FAST";
        };
    };

    macros {
        thin_arrow: thin_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp MINUS &kp GT>;
            label = "THIN_ARROW";
        };

        thick_arrow: thick_arrow {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp EQUAL &kp GREATER_THAN>;
            label = "THICK_ARROW";
        };

        rs_lambda_macro: rs_lambda_macro {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp PIPE &kp PIPE &kp LEFT>;
            label = "RS_LAMBDA_MACRO";
        };
    };

    combos {
        compatible = "zmk,combos";

        left_paran {
            bindings = <&kp LEFT_PARENTHESIS>;
            key-positions = <4 3>;
        };

        right_paran {
            bindings = <&kp RIGHT_PARENTHESIS>;
            key-positions = <5 6>;
        };

        left_brace {
            bindings = <&kp LEFT_BRACE>;
            key-positions = <13 14>;
        };

        right_brace {
            bindings = <&kp RIGHT_BRACE>;
            key-positions = <16 15>;
        };

        left_bracket {
            bindings = <&kp LEFT_BRACKET>;
            key-positions = <23 24>;
        };

        right_bracket {
            bindings = <&kp RIGHT_BRACKET>;
            key-positions = <26 25>;
        };

        esc {
            bindings = <&kp ESCAPE>;
            key-positions = <0 1>;
        };

        left_spotlight {
            bindings = <&kp LG(SPACE)>;
            key-positions = <1 2 3>;
        };

        right_spotlight {
            bindings = <&kp RG(SPACE)>;
            key-positions = <6 8 7>;
        };
    };

    keymap {
        compatible = "zmk,keymap";

        default_layer {
            label = "DEF";
            bindings = <
  &kp Q            &kp W            &kp E                &kp R                   &kp T        &kp Y        &kp U                    &kp I                 &kp O            &kp P
  &hml LEFT_GUI A  &hml LEFT_ALT S  &hml LEFT_CONTROL D  &hml_fast LEFT_SHIFT F  &kp G        &kp H        &hmr_fast RIGHT_SHIFT J  &hmr RIGHT_CONTROL K  &hmr LEFT_ALT L  &hmr RIGHT_GUI SEMICOLON
  &kp Z            &kp X            &kp C                &kp V                   &kp B        &kp N        &kp M                    &kp COMMA             &kp DOT          &as LS(SLASH) SLASH
                                                         &lt 4 SPACE             &lt 3 TAB    &lt 1 ENTER  &lt 2 BACKSPACE
            >;
        };

        sym {
            bindings = <
  &kp LEFT_BRACE  &kp AMPERSAND    &kp ASTERISK  &kp LEFT_PARENTHESIS   &kp RIGHT_BRACE    &none  &none            &none              &none          &none
  &kp COLON       &kp DOLLAR       &kp PERCENT   &kp CARET              &kp PLUS           &none  &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_GUI
  &kp TILDE       &kp EXCLAMATION  &kp AT_SIGN   &kp HASH               &kp PIPE           &none  &none            &none              &none          &none
                                                 &kp RIGHT_PARENTHESIS  &kp UNDERSCORE     &none  &none
            >;
        };

        num {
            bindings = <
  &kp LEFT_BRACKET  &kp NUMBER_7  &kp NUMBER_8  &kp NUMBER_9  &kp RIGHT_BRACKET       &none  &none            &none              &none          &none
  &kp SEMICOLON     &kp NUMBER_4  &kp NUMBER_5  &kp NUMBER_6  &kp EQUAL               &none  &kp RIGHT_SHIFT  &kp RIGHT_CONTROL  &kp RIGHT_ALT  &kp RIGHT_GUI
  &kp GRAVE         &kp NUMBER_1  &kp NUMBER_2  &kp NUMBER_3  &kp NON_US_BACKSLASH    &none  &none            &none              &none          &none
                                                &kp N0        &kp MINUS               &none  &none
            >;
        };

        nav {
            bindings = <
  &none         &none         &none             &none           &none    &none           &none           &none         &none            &none
  &kp LEFT_GUI  &kp LEFT_ALT  &kp LEFT_CONTROL  &kp LEFT_SHIFT  &none    &kp LEFT_ARROW  &kp DOWN_ARROW  &kp UP_ARROW  &kp RIGHT_ARROW  &none
  &none         &none         &none             &none           &none    &none           &none           &none         &none            &none
                                                &none           &none    &kp ENTER       &kp BACKSPACE
            >;
        };

        media {
            bindings = <
  &studio_unlock  &none  &none  &none  &none    &none  &none         &none         &none         &none
  &none           &none  &none  &none  &none    &none  &none         &none         &none         &none
  &none           &none  &none  &none  &none    &none  &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2  &bt BT_CLR_ALL
                                &none  &none    &none  &none
            >;
        };
    };
};
